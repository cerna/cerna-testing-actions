name: Rebuild on pull request on master

on:
  pull_request:
    branches:
      - mk-docs

jobs:
  buildMachinekitSite:
    runs-on: ubuntu-latest

    steps:
      # Locally clone the repository which we want to build with depth of 5 commits
      - name: Checkout the pull request for Machinekit-docs
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: to_build
          fetch-depth: '5'

      - name: Git SHA on which the build is requested
        run: echo ${{ github.event.pull_request.head.sha }}
      
      - name: Some DEBUG info
        run: |
          echo "g actor: $GITHUB_ACTOR"
          echo "g repository: $GITHUB_REPOSITORY"
          echo "g repository: $GITHUB_REPOSITORY"
          echo "g repository: $GITHUB_REPOSITORY"

      # Locally clone the repository to which the build results will be pushed
      - name: Checkout this repository, gh-pages branch
        uses: actions/checkout@v2
        with:
          repository: 'cerna/cerna-testing-actions'
          ref: gh-pages
          path: target

      - name: Git log of repository on which the build is requested
        run: git log
        working-directory: ./to_build

      # The commits pushed to gh-pages branch will appear as originated from the author
      # of the changes
      - name: Get last commit author
        run: |
          echo "###########################################################"
          echo "# Commit which will be used for mining of the credentials #"
          echo "###########################################################"
          git log -n 1
          echo ::set-env name=authormail::$(git log --format='%ae' -n 1 ${{ github.event.after }})
          echo ::set-env name=authorname::$(git log --format='%an' -n 1 ${{ github.event.after }})
        working-directory: ./to_build

      - name: Set up credentials for the new commit
        run: |
          git config --local user.email "$authormail"
          git config --local user.name "$authorname"
          echo "Author's name for the commit set to $authorname"
          echo "Author's mail for the commit set to $authormail"
        working-directory: ./target

      # Running the commands in ubuntu-master and not in Docker container because
      # of the age of the container -> It cannot be even build anymore
      #- name: Run a Jekyll builder
      #  run: docker run -v $(pwd)/to_build:/work haberlerm/docker-jekyll-asciidoctor jekyll build --verbose --trace --config _config.yml,_config_devel.yml
      - run: touch ./to_build/_site/${{ github.sha }}.txt
      - name: Print newly created files
        run: ls -R _site -print1
        working-directory: ./to_build

      # Always delete old files in the repository (for example for the case when commits
      # remove some files), but keep the .git directory and files in it intact
      # In other words, don't kill itself
      - name: Delete all files from ./target
        run: find . -depth -not \( -path "./.git" -or -path "." -or -path "./.git/*" \) -print0 | xargs -0 -t -I '{}' rm  -d '{}'
        working-directory: ./target

      - name: Copy the newly generated site to ./target
        run: cp -r to_build/_site/* target/

      - name: Create commit
        run: |
          git add --all
          git commit -m "PULL request ID ${{ github.event.pull_request.id }}, URL ${{ github.event.pull_request.url }}, SHA ${{ github.event.pull_request.head.sha }} "
        working-directory: ./target

      # In the case of multiple running builders at the same time, always fetch and rebase
      # gh-pages branch right before commit to minimize chances of failure
      - name: Rebase ./target repository as a last thing before Push
        run: |
          git fetch origin gh-pages
          git rebase origin/gh-pages
        working-directory: ./target

      - name: Push changes to gh-pages
        run: |
          echo "PUSHING..."
          git push https://${{ secrets.MK_TOKEN }}:${{ secrets.CERNA_TOKEN }}@github.com/cerna/cerna-testing-actions.git HEAD:gh-pages
        working-directory: ./target