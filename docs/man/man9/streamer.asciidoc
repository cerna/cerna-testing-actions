---
---
:skip-front-matter:

= STREAMER
:manmanual: HAL Components
:mansource: ../man/man9/streamer.asciidoc
:man version : 


== NAME
**streamer** -- stream file data into HAL in real time


== SYNOPSIS
**loadrt streamer** __depth=**depth1**[,**depth2**...] cfg= **string1**[,**string2**...]



== DESCRIPTION
**streamer** and **halstreamer** are used together to stream data from a file into the HAL in real time. +
**streamer** is a realtime HAL component that exports HAL pins and creates a FIFO in shared memory. +
hal_streamer is a user space program that copies data from stdin into the FIFO, so that
**streamer**
can write it to the HAL pins.


== OPTIONS

**depth**=__depth1[,depth2...]__ +
sets the depth of the user->realtime FIFO that **streamer** creates to receive data from **halstreamer**. +
Multiple values of __depth__ (separated by commas) can be specified if you need more than one FIFO 
(for example if you want to stream data from two different realtime threads).

**cfg**=__string1[,string2...]__ +
defines the set of HAL pins that **streamer** exports and later writes data to. +
One __string__ must be supplied for each FIFO, separated by commas. +
**streamer** exports one pin for each character in __string__.

Legal characters are:

 F, f (float pin)
 B, b (bit pin)
 S, s (s32 pin)
 U, u (u32 pin)



== FUNCTIONS

**streamer**.__N__ +
One function is created per FIFO, numbered from zero.



== PINS

**streamer.**__N__**.pin.**__M__ output +
Data from column __M__ of the data in FIFO __N__ appears on this pin.  The pin type depends on the config string.

**streamer.**__N__**.curr-depth** s32 output +
Current number of samples in the FIFO.  When this reaches zero, new data will no longer be written to the pins.

**streamer.**__N__**.empty** bit output +
TRUE when the FIFO __N__ is empty, FALSE when valid data is available.

**streamer.**__N__**.enable** bit input +
When TRUE, data from FIFO __N__ is written to the HAL pins. +
When false, no data is transferred.  Defaults to TRUE.

**streamer.**__N__**.underruns** s32 read/write +
The number of times that **sampler** has tried to write data to the HAL pins but found no fresh data in the FIFO. +
It increments whenever empty is true, and can be reset by the setp command.

== SEE ALSO
**halstreamer**
**sampler**
**halsampler**


== HISTORY



== BUGS
Should an 
enable
HAL pin be added, to allow streaming to be turned on and off?



== AUTHOR
Original version by John Kasunich, as part of the LinuxCNC
project.  Improvements by several other members of
the LinuxCNC development team. +
Now part of the Machinekit project


== COPYRIGHT
Copyright (c) 2006 John Kasunich.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
